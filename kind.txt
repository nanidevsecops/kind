cherryniks@CherryNiks:~/nani$ docker version
Client:
 Version:           24.0.7
 API version:       1.43
 Go version:        go1.22.2
 Git commit:        24.0.7-0ubuntu4
 Built:             Wed Apr 17 20:08:25 2024
 OS/Arch:           linux/amd64
 Context:           default

Server:
 Engine:
  Version:          24.0.7
  API version:      1.43 (minimum version 1.12)
  Go version:       go1.22.2
  Git commit:       24.0.7-0ubuntu4
  Built:            Wed Apr 17 20:08:25 2024
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.7.12
  GitCommit:
 runc:
  Version:          1.1.12-0ubuntu3
  GitCommit:
 docker-init:
  Version:          0.19.0
  GitCommit:
cherryniks@CherryNiks:~/nani$ curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    97  100    97    0     0    210      0 --:--:-- --:--:-- --:--:--   209
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 6766k  100 6766k    0     0  2526k      0  0:00:02  0:00:02 --:--:-- 10.4M
cherryniks@CherryNiks:~/nani$ chmod +x ./kind
cherryniks@CherryNiks:~/nani$ sudo mv ./kind /usr/local/bin/kind
[sudo] password for cherryniks:
cherryniks@CherryNiks:~/nani$ kind --version
kind version 0.17.0
cherryniks@CherryNiks:~/nani$ kind create cluster
Creating cluster "kind" ...
 ✓ Ensuring node image (kindest/node:v1.25.3) 🖼
 ✓ Preparing nodes 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Thanks for using kind! 😊
cherryniks@CherryNiks:~/nani$ kind get clusters
kind
cherryniks@CherryNiks:~/nani$ kubectl cluster-info --context kind-kind
Kubernetes control plane is running at https://127.0.0.1:44335
CoreDNS is running at https://127.0.0.1:44335/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.
cherryniks@CherryNiks:~/nani$ kind delete cluster
Deleting cluster "kind" ...
cherryniks@CherryNiks:~/nani

cherryniks@CherryNiks:~/nani/KIND$ cat multinodeclustercreate.yml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
cherryniks@CherryNiks:~/nani/KIND$

cherryniks@CherryNiks:~/nani/KIND$ vi multinodeclustercreate.yml
cherryniks@CherryNiks:~/nani/KIND$ kind create cluster --config multinodeclustercreate.yml
Creating cluster "kind" ...
 ✓ Ensuring node image (kindest/node:v1.25.3) 🖼
 ✓ Preparing nodes 📦 📦 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
 ✓ Joining worker nodes 🚜
Set kubectl context to "kind-kind"
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community 🙂
cherryniks@CherryNiks:~/nani/KIND$ kubectl get nodes
NAME                 STATUS   ROLES           AGE   VERSION
kind-control-plane   Ready    control-plane   74s   v1.25.3
kind-worker          Ready    <none>          41s   v1.25.3
kind-worker2         Ready    <none>          41s   v1.25.3


cherryniks@CherryNiks:~/nani/KIND$ docker ps
CONTAINER ID   IMAGE                  COMMAND                  CREATED         STATUS         PORTS                       NAMES
abe49673703d   kindest/node:v1.25.3   "/usr/local/bin/entr…"   4 minutes ago   Up 4 minutes                               kind-worker2
03ca93400469   kindest/node:v1.25.3   "/usr/local/bin/entr…"   4 minutes ago   Up 4 minutes   127.0.0.1:42707->6443/tcp   kind-control-plane
3ef73b0a52a9   kindest/node:v1.25.3   "/usr/local/bin/entr…"   4 minutes ago   Up 4 minutes                               kind-worker
cherryniks@CherryNiks:~/nani/KIND$

